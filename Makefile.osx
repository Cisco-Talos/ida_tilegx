include ../idacfg.mk
IDAVER=7

ifeq ($(IDAVER),6)
IMCEXT=.imc
ARCHFLAGS=-m32
endif

ifeq ($(IDAVER),7)
IMCEXT=.dylib
ARCHFLAGS=-m64 -D__X64__
endif


all:

# I put some not yet published targets in this optional include
#-include Makefile.extra

CXX=clang++
CC=clang
LD=clang++

TARGETS+=hexagon$(IMCEXT)

# where the quicinc objdump source can be found
gnutools=hx/sourceryg++-2012.03-151-hexagon/binutils-hexagon-2012.03

gnutoolsincludes=-I $(gnutools)/include -I $(gnutools)/bfd -I $(gnutools)/include/opcode
gnutoolsincludes+=-I ./build-mac/opcodes -I ./build-mac/bfd
CFLAGS=-D__MAC__ -D__IDP__ -I $(idasdk)/include
CFLAGS+=-DUSE_STANDARD_FILE_FUNCTIONS  
CFLAGS+=-DUSE_DANGEROUS_FUNCTIONS
CFLAGS+=-D_FORTIFY_SOURCE=0
CFLAGS+=-g $(if $(D),-O0,-O2)
LDFLAGS+=-g

# add this flag when you want verbose logging
CFLAGS+=$(if $(LOG),-DTRACELOG)

all: $(TARGETS)

hexagon$(IMCEXT): hexagon.obj gt_safe-ctype.obj  gt_hexagon-dis.obj gt_hexagon-opc.obj gt_hexagon-isa.obj bfd_funcs.obj gt_cpu-hexagon.obj dummy-scan.obj
	$(LD) $(LDFLAGS) -dynamiclib $(ARCHFLAGS) -o $@ $^  "$(idabin)/libida.dylib"

cflags_cpu-hexagon= $(gnutoolsincludes)
cflags_hexagon= $(gnutoolsincludes)
cflags_bfd_funcs= $(gnutoolsincludes)

install:  hexagon$(IMCEXT)
	cp $^  "$(idabin)/procs"

clean:
	$(RM) $(TARGETS) $(wildcard *.obj)


%.obj: %.cpp
	$(CXX) $(ARCHFLAGS) -std=c++1z -c -o$@ $^ $(cflags_$(basename $(notdir $@))) $(CFLAGS)
%.obj: %.c
	$(CC) $(ARCHFLAGS)  -c -o$@ $^ $(cflags_$(basename $(notdir $@))) $(CFLAGS)

gt_%.obj: $(gnutools)/libiberty/%.c
	$(CC) $(ARCHFLAGS) -c -o$@ $^ $(cflags_$(basename $(notdir $@)))  $(gnutoolsincludes) $(CFLAGS)

gt_%.obj: $(gnutools)/opcodes/%.c
	$(CC) $(ARCHFLAGS) -c -Wstrict-prototypes -Wmissing-prototypes -o$@ $^ $(cflags_$(basename $(notdir $@)))  $(gnutoolsincludes) $(CFLAGS)

gt_%.obj: $(gnutools)/bfd/%.c
	$(CC) $(ARCHFLAGS) -c -Wstrict-prototypes -Wmissing-prototypes -o$@ $^ $(cflags_$(basename $(notdir $@)))  $(gnutoolsincludes) $(CFLAGS)

%.obj: %.s
	$(CXX) -c $(ARCHFLAGS) -o$@ $^


